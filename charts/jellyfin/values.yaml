# Default values for jellyfin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.io/jellyfin/jellyfin
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env: {}
  # DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: "1"
  # JELLYFIN_LOG_DIR: /config/log
  # JELLYFIN_CONFIG_DIR: /config/config
  # JELLYFIN_MEDIA_DIR: /media
  # JELLYFIN_DATA_DIR: /config
  # JELLYFIN_WEB_DIR: /jellyfin/jellyfin-web
  # JELLYFIN_CACHE_DIR: /cache
  # JELLYFIN_FFMPEG: /usr/lib/jellyfin-ffmpeg/ffmpeg
  # LANG: en_US.UTF-8
  # LC_ALL: en_US.UTF-8
  # LANGUAGE: en_US:en

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "default"

podAnnotations: {}

podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: "openshift-default"
  annotations: {}
    # route.openshift.io/termination: edge
    # cert-manager.io/cluster-issuer: letsencrypt
    # external-dns.alpha.kubernetes.io/hostname: jellyfin.hknlab.io
    # external-dns.alpha.kubernetes.io/target: dyn4.hknlab.io
    # cert-manager.io/private-key-rotation-policy: always
    # acme.cert-manager.io/http01-ingress-class: openshift-default
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 6000m
  #   memory: 8Gi
  # requests:
  #   cpu: 4000m
  #   memory: 4Gi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

persistentVolumeClaims:
  media:
    enabled: true
    accessModes:
      - ReadWriteOnce
    storageSize: 5Ti
    storageClassName: ""
    existingVolumeName: ""
  config:
    enabled: true
    accessModes:
      - ReadWriteOnce
    storageSize: 1Gi
    storageClassName: ""
    existingVolumeName: ""
