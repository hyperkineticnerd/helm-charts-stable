---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
    version: {{ .Chart.AppVersion }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      version: {{ .Chart.AppVersion }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        version: {{ .Chart.AppVersion }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      containers:
        - name: media-server
          image: {{ include "jellyfin.imageString" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /jellyfin/jellyfin
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-env
          resources:
            limits:
              cpu: 6000m
              memory: 8Gi
            requests:
              cpu: 4000m
              memory: 4Gi
          ports:
            - name: http
              containerPort: 8096
            - name: https
              containerPort: 8920
          volumeMounts:
            - name: media
              mountPath: /media
            - name: config
              mountPath: /config
            - name: cache
              mountPath: /cache
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-media
      - name: config
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-config
      - name: cache
        emptyDir:
          medium: Memory
